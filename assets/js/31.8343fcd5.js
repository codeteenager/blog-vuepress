(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{443:function(t,s,a){"use strict";a.r(s);var n=a(30),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"okhttp的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#okhttp的使用"}},[t._v("#")]),t._v(" okhttp的使用")]),t._v(" "),s("p",[t._v("现在开发App常用的网络框架有android-async-http、volley、okhttp、Retrofit，由于android-async-http和volley内部使用的是HttpClient，而Android 6.0对HttpClient已经放弃了，不再使用。所以现在一般使用的网络框架是okhttp和Retrofit。今天讲解一下okhttp的使用。\n")]),t._v(" "),s("h2",{attrs:{id:"okhttp的使用-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#okhttp的使用-2"}},[t._v("#")]),t._v(" okhttp的使用")]),t._v(" "),s("ul",[s("li",[t._v("在使用之前需要加上对OkHttp的依赖\n"),s("pre",[t._v("compile 'com.squareup.okhttp3:okhttp:3.8.0'")])]),t._v(" "),s("li",[t._v("使用Okhttp的步骤如下：")]),t._v(" "),s("li",[t._v("创建OkHttpClient实例\n"),s("pre",[t._v("OkHttpClient okHttpClient = new OkHttpClient();")])]),t._v(" "),s("li",[t._v("创建一个Request对象,使用构造者模式\n"),s("pre",[t._v('Request.Builder builder = new Request.Builder();\nRequest request = builder.get().url("http://www.baidu.com").build();\n')])]),t._v(" "),s("li",[t._v("将Request对象使用OkHttpClient封装成Call对象\n"),s("pre",[t._v("Call call = okHttpClient.newCall(request);\n")])]),t._v(" "),s("li",[t._v("执行Call的方法\n"),s("ul",[s("li",[t._v("异步操作，回调的方法在子线程")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onFailure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Call")]),t._v(" call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Call")]),t._v(" call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Response")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("* 同步操作\n```java\n\t\tResponse response = call.execute();\n        String result = response.body().string();\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#### 以上是OkHttp基于Get请求，Post请求需要Request.Builder调用post()方法，并将RequestBody对象传入即可。代码如下：\n```java\n        RequestBody requestBody = new FormBody.Builder().add("username", "username").build();\n        Request request = builder.url("").post(requestBody).build();\n')])])]),s("p",[t._v("上面这种方法是通过表单的形式发送Post请求，当然RequestBody提供了一些静态方法来传入像字符串、上传文件等。\n"),s("img",{attrs:{src:"http://ww2.sinaimg.cn/large/006HJ39wgy1fg8b7yevp1j30oi039aai.jpg",alt:""}}),t._v("\n例如字符串：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestBody")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MediaType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/plain;chaset=utf-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{username:codeteenager}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("你只需注意第一个参数mime type即可。")]),t._v(" "),s("h4",{attrs:{id:"以上就是使用okhttp的一个基本的流程-okhttp官网-http-square-github-io-okhttp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以上就是使用okhttp的一个基本的流程-okhttp官网-http-square-github-io-okhttp"}},[t._v("#")]),t._v(" 以上就是使用OkHttp的一个基本的流程，OkHttp官网： http://square.github.io/okhttp/")])])}),[],!1,null,null,null);s.default=e.exports}}]);